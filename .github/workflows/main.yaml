name: workflow

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'README.md'

permissions:
  id-token: write
  contents: read

jobs:
  integration:
    name: Continuous Integration
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Ensures all files are pulled

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm ci

      - name: Lint code
        run: npm run lint

      - name: Run unit tests
        run: npm test

  build-and-push-ecr-image:
    name: Continuous Delivery
    needs: integration
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Ensures the Dockerfile is pulled

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
          ECR_REPO_URI: ${{ secrets.AWS_ECR_REPO_URI }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          # Ensure Dockerfile exists
          if [ ! -f Dockerfile ]; then
            echo "Dockerfile not found!"
            exit 1
          fi

          # Build the Docker image
          docker build -t $ECR_REPO_URI:$IMAGE_TAG .

          # Push the Docker image to ECR
          docker push $ECR_REPO_URI:$IMAGE_TAG

          # Optionally, tag the image as "latest"
          docker tag $ECR_REPO_URI:$IMAGE_TAG $ECR_REPO_URI:latest
          docker push $ECR_REPO_URI:latest
